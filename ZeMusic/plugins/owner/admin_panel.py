import asyncio
import json
from typing import Dict, List, Optional

import config
from ZeMusic.logging import LOGGER
from ZeMusic.core.telethon_client import telethon_manager
from ZeMusic.core.database import db

class AdminPanel:
    """ููุญุฉ ุฃูุงูุฑ ุงููุทูุฑ ุงูุฑุฆูุณูุฉ"""
    
    def __init__(self):
        self.active_sessions = {}  # ุฌูุณุงุช ุงููุทูุฑ ุงููุดุทุฉ
        
    async def show_main_panel(self, user_id: int) -> Dict:
        """ุนุฑุถ ุงูููุญุฉ ุงูุฑุฆูุณูุฉ ูุฃูุงูุฑ ุงููุทูุฑ"""
        if user_id != config.OWNER_ID:
            return {
                'success': False,
                'message': "โ ูุฐุง ุงูุฃูุฑ ูุฎุตุต ููุทูุฑ ุงูุจูุช ููุท"
            }
        
        # ุงูุญุตูู ุนูู ุฅุญุตุงุฆูุงุช ุณุฑูุนุฉ
        quick_stats = await self._get_quick_stats()
        
        keyboard = [
            [
                {'text': '๐ ุงูุฅุญุตุงุฆูุงุช', 'callback_data': 'admin_stats'},
                {'text': '๐ข ุงูุฅุฐุงุนุฉ', 'callback_data': 'admin_broadcast'}
            ],
            [
                {'text': '๐ ุงูุงุดุชุฑุงู ุงูุฅุฌุจุงุฑู', 'callback_data': 'admin_force_subscribe'},
                {'text': '๐ฑ ุฅุฏุงุฑุฉ ุงูุญุณุงุจุงุช ุงููุณุงุนุฏุฉ', 'callback_data': 'admin_assistants'}
            ],
            [
                {'text': '๐ฌ ุฅุฏุงุฑุฉ ุงููุฌููุนุงุช', 'callback_data': 'admin_groups'},
                {'text': '๐ง ุตูุงูุฉ ุงููุธุงู', 'callback_data': 'admin_maintenance'}
            ],
            [
                {'text': 'โ๏ธ ุฅุนุฏุงุฏุงุช ุงูุจูุช', 'callback_data': 'admin_settings'},
                {'text': '๐ ุณุฌูุงุช ุงููุธุงู', 'callback_data': 'admin_logs'}
            ],
            [
                {'text': '๐ ุฅุนุงุฏุฉ ุชุดุบูู', 'callback_data': 'admin_restart'},
                {'text': '๐ ุฅููุงู ุงูุจูุช', 'callback_data': 'admin_shutdown'}
            ]
        ]
        
        message = (
            "๐๏ธ **ููุญุฉ ุฃูุงูุฑ ุงููุทูุฑ**\n\n"
            f"๐ ุฃููุงู ูุณููุงู **{config.BOT_NAME}** Developer\n\n"
            
            f"๐ **ูุธุฑุฉ ุณุฑูุนุฉ:**\n"
            f"๐ค ุงููุณุชุฎุฏููู: `{quick_stats['users']}`\n"
            f"๐ฌ ุงููุฌููุนุงุช: `{quick_stats['groups']}`\n"
            f"๐ข ุงููููุงุช: `{quick_stats['channels']}`\n"
            f"๐ค ุงูุญุณุงุจุงุช ุงููุณุงุนุฏุฉ: `{quick_stats['assistants_connected']}/{quick_stats['assistants_total']}`\n"
            f"๐ต ุงูุฌูุณุงุช ุงููุดุทุฉ: `{quick_stats['active_sessions']}`\n\n"
            
            f"๐ง **ุญุงูุฉ ุงููุธุงู:** `{quick_stats['system_status']}`\n"
            f"โก **ููุช ุงูุชุดุบูู:** `{quick_stats['uptime']}`\n\n"
            
            "ุงุฎุชุฑ ุงูุฅุฌุฑุงุก ุงููุทููุจ:"
        )
        
        return {
            'success': True,
            'message': message,
            'keyboard': keyboard,
            'parse_mode': 'Markdown'
        }
    
    async def handle_callback(self, user_id: int, callback_data: str, message_id: int = None) -> Dict:
        """ูุนุงูุฌ ุงูุถุบุท ุนูู ุงูุฃุฒุฑุงุฑ"""
        if user_id != config.OWNER_ID:
            return {'success': False, 'message': "โ ุบูุฑ ูุตุฑุญ"}
        
        # ุชูุฌูู ุฅูู ุงููุนุงูุฌ ุงูููุงุณุจ
        if callback_data == 'admin_stats':
            from ZeMusic.plugins.owner.stats_handler import stats_handler
            return await stats_handler.show_detailed_stats(user_id)
            
        elif callback_data == 'admin_broadcast':
            from ZeMusic.plugins.owner.broadcast_handler import broadcast_handler
            return await broadcast_handler.show_broadcast_menu(user_id)
            
        elif callback_data == 'admin_force_subscribe':
            from ZeMusic.plugins.owner.force_subscribe_handler import force_subscribe_handler
            return await force_subscribe_handler.show_force_subscribe_menu(user_id)
            
        elif callback_data == 'admin_assistants':
            from ZeMusic.plugins.owner.assistants_handler import assistants_handler
            return await assistants_handler.show_assistants_panel(user_id)
            
        elif callback_data == 'admin_main':
            return await self.show_main_panel(user_id)
            
        else:
            return {
                'success': True,
                'message': f"๐ง **{callback_data}**\n\nูุฐู ุงูููุฒุฉ ููุฏ ุงูุชุทููุฑ...",
                'keyboard': [[{'text': '๐ ุงูุนูุฏุฉ ูููุญุฉ ุงูุฑุฆูุณูุฉ', 'callback_data': 'admin_main'}]]
            }
    
    async def _get_quick_stats(self) -> Dict:
        """ุงูุญุตูู ุนูู ุฅุญุตุงุฆูุงุช ุณุฑูุนุฉ"""
        try:
            # ุฅุญุตุงุฆูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
            stats = await db.get_stats()
            
            # ุฅุญุตุงุฆูุงุช ุงูุญุณุงุจุงุช ุงููุณุงุนุฏุฉ
            assistants_total = telethon_manager.get_assistants_count()
            assistants_connected = telethon_manager.get_connected_assistants_count()
            
            # ุฅุญุตุงุฆูุงุช ุงูุฌูุณุงุช ุงููุดุทุฉ
            from ZeMusic.core.music_manager import telethon_music_manager as music_manager
            active_sessions = len(music_manager.active_sessions)
            
            # ุชูุฑูู ุงููุฌููุนุงุช ูุงููููุงุช
            groups_count, channels_count = await self._get_groups_channels_count()
            
            return {
                'users': stats['users'],
                'groups': groups_count,
                'channels': channels_count,
                'assistants_total': assistants_total,
                'assistants_connected': assistants_connected,
                'active_sessions': active_sessions,
                'system_status': 'ูุดุท' if assistants_connected > 0 else 'ูุญุฏูุฏ',
                'uptime': self._get_uptime()
            }
            
        except Exception as e:
            LOGGER(__name__).error(f"ุฎุทุฃ ูู ุงูุญุตูู ุนูู ุงูุฅุญุตุงุฆูุงุช: {e}")
            return {
                'users': 0, 'groups': 0, 'channels': 0,
                'assistants_total': 0, 'assistants_connected': 0,
                'active_sessions': 0, 'system_status': 'ุฎุทุฃ', 'uptime': 'ุบูุฑ ูุชุงุญ'
            }
    
    async def _get_groups_channels_count(self) -> tuple:
        """ุงูุญุตูู ุนูู ุนุฏุฏ ุงููุฌููุนุงุช ูุงููููุงุช ูููุตูุฉ"""
        try:
            # ููุง ูููู ุฅุถุงูุฉ ููุทู ููุชูููุฒ ุจูู ุงููุฌููุนุงุช ูุงููููุงุช
            # ุญุงููุงู ูุณุชุฎุฏู ุงูุนุฏุฏ ุงูุฅุฌูุงูู ููุณูู
            total_chats = (await db.get_stats())['chats']
            # ุชูุฏูุฑ: 70% ูุฌููุนุงุชุ 30% ูููุงุช
            groups = int(total_chats * 0.7)
            channels = total_chats - groups
            return groups, channels
        except:
            return 0, 0
    
    def _get_uptime(self) -> str:
        """ุงูุญุตูู ุนูู ููุช ุงูุชุดุบูู"""
        # ูููู ุญูุธ ููุช ุงูุจุฏุก ูู ูุชุบูุฑ ุนุงู ูุญุณุงุจ ุงููุฑู
        return "ุบูุฑ ูุชุงุญ"
    
    async def clear_session(self, user_id: int):
        """ูุณุญ ุฌูุณุฉ ุงููุทูุฑ"""
        if user_id in self.active_sessions:
            del self.active_sessions[user_id]

# ุฅูุดุงุก ูุซูู ุนุงู ูููุญุฉ ุงููุทูุฑ
admin_panel = AdminPanel()