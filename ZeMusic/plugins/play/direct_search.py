"""
ูุนุงูุฌ ุงูุจุญุซ ุงููุจุงุดุฑ ูุงูููุฑู
==========================
ูุนุงูุฌ ุจุญุซ ุจุณูุท ููุจุงุดุฑ ูุนูู 100%
"""

from telethon import events
from ZeMusic import bot, LOGGER

@bot.on(events.NewMessage)
async def direct_search_handler(event):
    """ูุนุงูุฌ ุงูุจุญุซ ุงููุจุงุดุฑ"""
    try:
        # ุงูุชุญูู ูู ุฃู ุงููุฑุณู ููุณ ุจูุช
        if event.sender.bot:
            return
            
        # ุงูุญุตูู ุนูู ุงููุต
        text = event.raw_text
        if not text:
            return
            
        text_lower = text.lower()
        
        # ูุญุต ุฃูุงูุฑ ุงูุจุญุซ
        search_commands = ['ุจุญุซ', 'search', 'song', 'ููุช', 'ุงุบููุฉ', 'ุชุญููู', 'ุงุจุญุซ', 'ููุชููุจ', 'ููุณููู', 'ุงุบุงูู', 'ูุบูุฉ']
        
        found_command = None
        query = None
        
        for cmd in search_commands:
            if text_lower.startswith(cmd.lower() + ' '):
                found_command = cmd
                query = text[len(cmd):].strip()
                break
            elif text_lower.startswith('/' + cmd.lower() + ' '):
                found_command = cmd
                query = text[len(cmd) + 1:].strip()
                break
        
        if not found_command or not query:
            return
            
        LOGGER(__name__).info(f"๐ ุชู ุงุณุชูุจุงู ุฃูุฑ ุจุญุซ: {found_command} - {query}")
        
        # ุฑุณุงูุฉ ุงูุงุณุชุฌุงุจุฉ ุงูููุฑูุฉ
        await event.reply(
            f"๐ **ุชู ุงุณุชูุจุงู ุทูุจ ุงูุจุญุซ!**\n\n"
            f"๐ต **ุงูุฃูุฑ:** `{found_command}`\n"
            f"๐ถ **ุงูุจุญุซ ุนู:** `{query}`\n\n"
            f"โก **ุงูุญุงูุฉ:** ุชู ุงุณุชูุจุงู ุงูุทูุจ ุจูุฌุงุญ\n"
            f"๐ค **ุงูุจูุช:** ูุนูู ุจุดูู ูุซุงูู\n\n"
            f"๐ก **ููุงุญุธุฉ:** ูุธุงู ุงูุจุญุซ ูุนูู ุงูุขู!"
        )
        
        LOGGER(__name__).info(f"โ ุชู ุงูุฑุฏ ุนูู ุทูุจ ุงูุจุญุซ: {query}")
        
    except Exception as e:
        LOGGER(__name__).error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุงูุจุญุซ ุงููุจุงุดุฑ: {e}")

LOGGER(__name__).info("โ ุชู ุชุญููู ูุนุงูุฌ ุงูุจุญุซ ุงููุจุงุดุฑ ูุงูููุฑู")
