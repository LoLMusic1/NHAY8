"""
๐ ูุนุงูุฌ ุงูุจุญุซ ุงููุจุณุท ูุงูุณุฑูุน
===========================
ูุนุงูุฌ ุจุญุซ ูุจุงุดุฑ ูุณุฑูุน ููุฃุบุงูู ูุน Telethon
"""

import asyncio
import os
import re
from telethon import events, Button
from ZeMusic import bot, LOGGER

@bot.on(events.NewMessage(pattern=r'^/?(ุจุญุซ|search|song|ููุช|ุงุบููุฉ|ุชุญููู|ุงุจุญุซ|ููุชููุจ|ููุณููู|ุงุบุงูู|ูุบูุฉ)(\s+(.+))?$'))
async def quick_search_handler(event):
    """ูุนุงูุฌ ุงูุจุญุซ ุงูุณุฑูุน ูุงููุจุงุดุฑ"""
    try:
        # ุงูุชุญูู ูู ุฃู ุงููุฑุณู ููุณ ุจูุช
        if event.sender.bot:
            return
            
        # ุงุณุชุฎุฑุงุฌ ุงูุงุณุชุนูุงู
        match = event.pattern_match
        command = match.group(1) if match.group(1) else ""
        query = match.group(3) if match.group(3) else ""
        
        if not query:
            await event.reply(
                f"๐ **ุงูุงุณุชุฎุฏุงู:**\n\n"
                f"โข `/{command} ุงุณู ุงูุฃุบููุฉ`\n"
                f"โข `{command} ุงุณู ุงูููุงู - ุงุณู ุงูุฃุบููุฉ`\n\n"
                f"**ูุซุงู:**\n"
                f"`{command} ุนูุฑู ุฏูุงุจ ููุฑ ุงูุนูู`"
            )
            return
            
        # ุฑุณุงูุฉ ุงูุญุงูุฉ
        status_msg = await event.reply(
            f"๐ **ุงูุจุญุซ ุนู:** `{query}`\n\n"
            f"โณ ุฌุงุฑู ุงูุจุญุซ ูู ุฌููุน ุงููุตุงุฏุฑ..."
        )
        
        LOGGER(__name__).info(f"๐ ุชู ุงุณุชูุจุงู ุทูุจ ุจุญุซ: {query} ูู ุงููุณุชุฎุฏู {event.sender_id}")
        
        # ูุญุงููุฉ ุงูุจุญุซ ูุงูุชุญููู
        try:
            # ุงุณุชูุฑุงุฏ ูุชุดุบูู ูุธุงู ุงูุจุญุซ
            await search_and_download(event, query, status_msg)
            
        except Exception as e:
            LOGGER(__name__).error(f"ุฎุทุฃ ูู ุงูุจุญุซ: {e}")
            await status_msg.edit(
                f"โ **ูุดู ูู ุงูุจุญุซ**\n\n"
                f"**ุงูุงุณุชุนูุงู:** `{query}`\n"
                f"**ุงูุฎุทุฃ:** {str(e)[:100]}...\n\n"
                f"๐ก ุฌุฑุจ ุงูุจุญุซ ุจุทุฑููุฉ ุฃุฎุฑู ุฃู ุฃุนุฏ ุงููุญุงููุฉ"
            )
            
    except Exception as e:
        LOGGER(__name__).error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุงูุจุญุซ: {e}")
        try:
            await event.reply(
                "โ **ุฎุทุฃ ูู ุงููุธุงู**\n\n"
                "ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน\n"
                "ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู"
            )
        except:
            pass

async def search_and_download(event, query: str, status_msg):
    """ุฏุงูุฉ ุงูุจุญุซ ูุงูุชุญููู ุงูุฑุฆูุณูุฉ"""
    try:
        # ุชุญุฏูุซ ุงูุญุงูุฉ
        await status_msg.edit(
            f"๐ **ุงูุจุญุซ ุนู:** `{query}`\n\n"
            f"๐ต ุฌุงุฑู ุงูุจุญุซ ูู ููุชููุจ..."
        )
        
        # ุงูุจุญุซ ูู ููุชููุจ
        try:
            from youtubesearchpython import VideosSearch
            
            search = VideosSearch(query, limit=1)
            results = search.result()
            
            if not results.get('result'):
                await status_msg.edit(
                    f"โ **ูู ูุชู ุงูุนุซูุฑ ุนูู ูุชุงุฆุฌ**\n\n"
                    f"**ุงูุงุณุชุนูุงู:** `{query}`\n\n"
                    f"๐ก ุฌุฑุจ ุงูุจุญุซ ุจูููุงุช ุฃุฎุฑู"
                )
                return
                
            video = results['result'][0]
            video_url = video['link']
            title = video['title']
            duration = video.get('duration', 'ุบูุฑ ูุญุฏุฏ')
            
            # ุชุญุฏูุซ ุงูุญุงูุฉ
            await status_msg.edit(
                f"โ **ุชู ุงูุนุซูุฑ ุนูู ุงูุฃุบููุฉ!**\n\n"
                f"๐ต **ุงูุนููุงู:** {title[:50]}...\n"
                f"โฑ๏ธ **ุงููุฏุฉ:** {duration}\n\n"
                f"๐ฅ ุฌุงุฑู ุงูุชุญููู..."
            )
            
            LOGGER(__name__).info(f"โ ุชู ุงูุนุซูุฑ ุนูู: {title}")
            
            # ุชุญููู ุงูููู
            await download_audio(event, video_url, title, status_msg)
            
        except ImportError:
            await status_msg.edit(
                "โ **ุฎุทุฃ ูู ุงููุธุงู**\n\n"
                "ููุชุจุฉ ุงูุจุญุซ ุบูุฑ ูุชุงุญุฉ\n"
                "ูุฑุฌู ุงููุญุงููุฉ ูุงุญูุงู"
            )
        except Exception as e:
            LOGGER(__name__).error(f"ุฎุทุฃ ูู ุงูุจุญุซ: {e}")
            await status_msg.edit(
                f"โ **ุฎุทุฃ ูู ุงูุจุญุซ**\n\n"
                f"**ุงูุฎุทุฃ:** {str(e)[:100]}...\n\n"
                f"๐ก ุฌุฑุจ ุงูุจุญุซ ุจุทุฑููุฉ ุฃุฎุฑู"
            )
            
    except Exception as e:
        LOGGER(__name__).error(f"ุฎุทุฃ ูู ุฏุงูุฉ ุงูุจุญุซ: {e}")
        raise

async def download_audio(event, video_url: str, title: str, status_msg):
    """ุชุญููู ุงูููู ุงูุตูุชู"""
    try:
        # ูุญุงููุฉ ุฑุณุงูุฉ ุจุณูุทุฉ ุฃููุงู
        await status_msg.edit(
            f"โ **ุชู ุงูุนุซูุฑ ุนูู ุงูุฃุบููุฉ!**\n\n"
            f"๐ต **ุงูุนููุงู:** {title[:50]}...\n\n"
            f"๐ **ุงูุฑุงุจุท:** {video_url}\n\n"
            f"๐ฅ ููููู ุชุญููููุง ูุฏููุงู ูู ุงูุฑุงุจุท ุฃุนูุงู"
        )
        
        LOGGER(__name__).info(f"โ ุชู ุฅุฑุณุงู ุฑุงุจุท ุงูุฃุบููุฉ: {title}")
            
    except Exception as e:
        LOGGER(__name__).error(f"ุฎุทุฃ ูู ุฏุงูุฉ ุงูุชุญููู: {e}")
        raise

LOGGER(__name__).info("โ ุชู ุชุญููู ูุนุงูุฌ ุงูุจุญุซ ุงููุจุณุท ูุงูุณุฑูุน")
