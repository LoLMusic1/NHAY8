"""
๐ ูุนุงูุฌ ุฃูุงูุฑ ุงูุจุญุซ ููุจูุช
========================
ูุชุนุงูู ูุน ุฌููุน ุฃูุงูุฑ ุงูุจุญุซ ูููุฌููุง ูููุนุงูุฌ ุงูููุงุณุจ
"""

import asyncio
import re
from telethon import events
from pyrogram import filters
from ZeMusic import app, LOGGER

# ูุงุฆูุฉ ุฃูุงูุฑ ุงูุจุญุซ ุงููุฏุนููุฉ
SEARCH_COMMANDS = [
    "ุจุญุซ", "search", "song", "ููุช", "ุงุบููุฉ", "ุชุญููู", 
    "ุงุจุญุซ", "ููุชููุจ", "ููุณููู", "ุงุบุงูู", "ูุบูุฉ"
]

@app.on_message(filters.command(SEARCH_COMMANDS) & ~filters.bot)
async def handle_search_command(client, message):
    """ูุนุงูุฌ ุฃูุงูุฑ ุงูุจุญุซ ุงูุฑุฆูุณู"""
    try:
        # ุงุณุชุฎุฑุงุฌ ุงููุต
        command = message.command[0] if message.command else ""
        query = " ".join(message.command[1:]) if len(message.command) > 1 else ""
        
        # ุฅุฐุง ูู ููู ููุงู ุงุณุชุนูุงูุ ุงุณุชุฎุฏู ุงููุต ุจุนุฏ ุงูุฃูุฑ
        if not query and message.text:
            text_parts = message.text.split(maxsplit=1)
            query = text_parts[1] if len(text_parts) > 1 else ""
        
        if not query:
            await message.reply_text(
                "๐ **ุงูุงุณุชุฎุฏุงู:**\n"
                f"โข `/{command} ุงุณู ุงูุฃุบููุฉ`\n"
                f"โข `{command} ุงุณู ุงูููุงู - ุงุณู ุงูุฃุบููุฉ`\n\n"
                "**ูุซุงู:**\n"
                f"`/{command} ุนูุฑู ุฏูุงุจ ููุฑ ุงูุนูู`"
            )
            return
        
        # ุงุณุชูุฑุงุฏ ูุชุดุบูู ุงููุนุงูุฌ ุงููุญุณู
        try:
            from ZeMusic.plugins.play.download_enhanced import download_enhanced_song
            await download_enhanced_song(message, query)
            LOGGER(__name__).info(f"โ ุชู ุชุดุบูู ุงูุจุญุซ ุงููุญุณู: {query}")
        except ImportError:
            try:
                from ZeMusic.plugins.play.download import download_song_smart
                await download_song_smart(message, query)
                LOGGER(__name__).info(f"โ ุชู ุชุดุบูู ุงูุจุญุซ ุงูุฃุณุงุณู: {query}")
            except ImportError:
                await message.reply_text(
                    "โ **ุฎุทุฃ ูู ุงููุธุงู**\n\n"
                    "ุงููุนุงูุฌุงุช ุบูุฑ ูุชุงุญุฉ ุญุงููุงู\n"
                    "ูุฑุฌู ุงููุญุงููุฉ ูุงุญูุงู"
                )
        except Exception as e:
            LOGGER(__name__).error(f"ุฎุทุฃ ูู ุชุดุบูู ุงููุนุงูุฌ: {e}")
            await message.reply_text(
                "โ **ุฎุทุฃ ูู ุงูุจุญุซ**\n\n"
                "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุทูุจู\n"
                "ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู"
            )
            
    except Exception as e:
        LOGGER(__name__).error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุงูุจุญุซ: {e}")
        await message.reply_text(
            "โ **ุฎุทุฃ ูู ุงูุจุญุซ**\n\n"
            "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุทูุจู\n"
            "ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู"
        )

# ูุนุงูุฌ ููุฑุณุงุฆู ุงูุนุงุฏูุฉ ุงูุชู ุชุจุฏุฃ ุจูููุงุช ุงูุจุญุซ
@app.on_message(filters.text & ~filters.command(SEARCH_COMMANDS) & ~filters.bot)
async def handle_text_search(client, message):
    """ูุนุงูุฌ ููุฑุณุงุฆู ุงููุตูุฉ ุงูุชู ุชุญุชูู ุนูู ุฃูุงูุฑ ุงูุจุญุซ"""
    try:
        if not message.text:
            return
            
        text = message.text.strip()
        text_lower = text.lower()
        
        # ูุญุต ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุชุจุฏุฃ ุจูููุฉ ุจุญุซ
        for cmd in SEARCH_COMMANDS:
            if text_lower.startswith(cmd.lower() + " "):
                query = text[len(cmd):].strip()
                
                if query:
                    # ุงุณุชูุฑุงุฏ ูุชุดุบูู ุงููุนุงูุฌ ุงููุญุณู
                    try:
                        from ZeMusic.plugins.play.download_enhanced import download_enhanced_song
                        await download_enhanced_song(message, query)
                        LOGGER(__name__).info(f"โ ุชู ุชุดุบูู ุงูุจุญุซ ุงููุตู ุงููุญุณู: {query}")
                    except ImportError:
                        try:
                            from ZeMusic.plugins.play.download import download_song_smart
                            await download_song_smart(message, query)
                            LOGGER(__name__).info(f"โ ุชู ุชุดุบูู ุงูุจุญุซ ุงููุตู ุงูุฃุณุงุณู: {query}")
                        except ImportError:
                            await message.reply_text(
                                "โ **ุฎุทุฃ ูู ุงููุธุงู**\n\n"
                                "ุงููุนุงูุฌุงุช ุบูุฑ ูุชุงุญุฉ ุญุงููุงู\n"
                                "ูุฑุฌู ุงููุญุงููุฉ ูุงุญูุงู"
                            )
                    except Exception as e:
                        LOGGER(__name__).error(f"ุฎุทุฃ ูู ุชุดุบูู ุงููุนุงูุฌ ุงููุตู: {e}")
                        await message.reply_text(
                            "โ **ุฎุทุฃ ูู ุงูุจุญุซ**\n\n"
                            "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุทูุจู\n"
                            "ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู"
                        )
                    return
                    
    except Exception as e:
        LOGGER(__name__).error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุงูุจุญุซ ุงููุตู: {e}")

LOGGER(__name__).info("โ ุชู ุชุญููู ูุนุงูุฌ ุฃูุงูุฑ ุงูุจุญุซ")
